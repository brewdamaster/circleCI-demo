# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.1-node-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19

    steps:
      - checkout



      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      #- run: sudo docker-php-ext-install zip
      - run: sudo apt install nginx
      - run: sudo mkdir -p /var/www/default/html
      - run: sudo touch /var/www/default/html/index.html
      - run: sudo echo -e "<button onclick="myFunction\(\)">Click me</button>\n\n<p id="demo"></p>\n\n<script>\nfunction myFunction\(\) {\n document.getElementById\("demo"\).innerHTML = "Hello World";\n}\n</script>\n\n</body>\n</html>" >> /var/www/default/html/index.html
      - run: sudo cat /var/www/default/html/index.html
      - run: sudo chown -R $USER:$USER /var/www/default/html
      - run: sudo chmod -R 755 /var/www/default/html
      - run: sudo systemctl restart nginx
      - run: sudo systemctl enable nginx


paths:
      # Download and cache dependencies
      #- restore_cache:
      #    keys:
            # "composer.lock" can be used if it is committed to the repo
      #      - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
      #      - v1-dependencies-

      #- run: composer install -n --prefer-dist

      #- save_cache:
      #    key: v1-dependencies-{{ checksum "composer.json" }}
      #    paths:
      #      - ./vendor
      #- restore_cache:
      #    keys:
      #      - node-v1-{{ checksum "package.json" }}
      #      - node-v1-
      #- run: yarn install
      #- save_cache:
      #    key: node-v1-{{ checksum "package.json" }}
      #    paths:
      #      - node_modules

      # prepare the database
      #- run: touch storage/testing.sqlite
      #- run: php artisan migrate --env=testing --database=sqlite_testing --force

      # run tests with phpunit or codecept
      #- run: ./vendor/bin/phpunit
      #- run: ./vendor/bin/codecept build
      #- run: ./vendor/bin/codecept run
